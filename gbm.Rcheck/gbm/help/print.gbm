print.gbm                package:gbm                R Documentation

~~_f_u_n_c_t_i_o_n _t_o _d_o ... ~~

_D_e_s_c_r_i_p_t_i_o_n:

     Display basic information about a 'gbm' object.

_U_s_a_g_e:

     print.gbm(x, ...)

_A_r_g_u_m_e_n_t_s:

       x: an object of class 'gbm'. 

     ...: arguments passed to 'print.default'. 

_D_e_t_a_i_l_s:

     Prints some information about the model object. In particular, the
     call to the model fitting function is given, and the type of loss
     function that was used is given, as is the total number of
     iterations.

     If cross-validation was performed, the 'best' number of trees as
     estimated by cross-validation error is dispalyed. If a test set
     was used, the 'best' number of trees as estimated by the test set
     error is displayed.

     The number of available predictors, and the number of those having
     non-zero influence on predictions is given (which might be
     interesting in data mining applications).

     If K-class, Bernoulli or adaboost classification was performed,
     the confusion matrix and prediction accuracy are printed (objects
     being allocated to the class with highest probability for K-class
     and Bernoulli). These classifications are performed on the entire
     training data using the model with the 'best' number of trees as
     described above, or the maximum number of trees if the 'best'
     can't be computed.

     If the 'distribution' was specified as Gaussian, Laplace,
     quantile, bisquare or t-distribution, a summary of the residuals
     is displayed. The residuals are for the training data with the
     model at the 'best' number of trees, as described above, or the
     maximum number of trees if the 'best' can't be computed.

_A_u_t_h_o_r(_s):

     Harry Southworth, Daniel Edwards

_S_e_e _A_l_s_o:

     'gbm'

_E_x_a_m_p_l_e_s:

     library( gbm )
     data( iris )
     iris.mod <- gbm( Species ~ ., distribution="kclass", data=iris,
                      n.trees=2000, shrinkage=.01, cv.folds=5 )
     iris.mod
     data( lung )
     lung.mod <- gbm( Surv(time, status) ~ ., distribution="coxph", data=lung,
                      n.trees=2000, shrinkage=.01, cv.folds=5 )
     lung.mod

